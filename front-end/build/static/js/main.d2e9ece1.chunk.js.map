{"version":3,"sources":["images/reportForm.png","images/reportMap.png","images/issueExample.png","components/pages/home.js","modules/issueHandler.js","utils/functional/location.js","components/table-dropdown.js","utils/constants/issueData.js","components/issuesFilter.js","utils/functional/dateHandler.js","components/votePanel.js","components/issueCard.js","components/issueList.js","components/pagination.js","components/marker.js","components/map.js","components/issuePanel.js","components/userIssues.js","components/pages/issues.js","modules/userAuthentication.js","components/issuesTable.js","components/adminPanel.js","components/suggestionBox.js","components/suggestion.js","components/adminIssues.js","components/popup.js","components/notification.js","components/pages/admin.js","actions/userActions.js","components/inputField.js","components/utility/errorBox.js","components/forms/loginForm.js","components/pages/login.js","components/forms/registerForm.js","components/pages/register.js","components/forms/reportIssueForm.js","components/pages/report.js","App.js","serviceWorker.js","utils/reducers/userReducer.js","utils/reducers/messageReducer.js","utils/rootReducer.js","index.js","../../validation/validate.js"],"names":["module","exports","Home","props","renderPagination","circles","i","data","length","cn","state","pagination","push","key","className","icon","faCircle","increasePagination","setState","decreasePagination","href","src","reportFormExample","alt","reportMapExample","style","width","issueExample","document","title","this","faChevronLeft","onClick","faChevronRight","Component","api_url","reportIssue","issue","api_endpoint","axios","post","then","response","catch","err","voteForIssue","id","username","voteAgainstIssue","fetchJobSheet","get","responseType","fetchAllIssues","updateIssuePriority","priority","put","updateIssueStatus","status","filterIssues","issues","filter","Error","filteredIssues","Object","keys","indexOf","toString","splitIssues","rpp","temp","slice","deg2rad","value","Math","PI","getLocationFailure","alert","distance","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","getCurrentLocation","success","fail","options","enableHighAccuracy","timeout","maximumAge","navigator","geolocation","getCurrentPosition","TableDropDown","initialValue","changeCallback","defaultValue","useState","setValue","onChange","e","_value","target","label","concat","map","option","USER_STATUS_OPTIONS","ADMIN_STATUS_OPTIONS","PRIORITY_OPTIONS","undefined","IssuesFilter","filterCallback","isAdmin","setFilter","STATUS_OPTIONS","updateFilter","currentFilter","faFilter","difference","date1","date2","validate","checkUndefinedParams","validateDate","Date","UTC","getFullYear","getMonth","getDate","abs","timestampDays","timestamp","validateTimestamp","floor","VotePanel","store","stateIssue","setStateIssue","thankyouAlert","failedVoteAlert","getState","userReducer","user","newVotes","votes","faArrowUp","faArrowDown","IssueCard","dateReported","dateSubmitted","titleStyle","titleIcon","streetName","timeElapsed","dateResolved","now","daysElapsed","DateHandler","backgroundColor","color","faFlag","faClock","faCheckCircle","description","type","lat","toFixed","lng","IssueList","numIssues","toggleMap","faList","Pagination","numberOfPages","setPagination","paginationDOM","max","window","scrollTo","Marker","InfoBox","toLocaleDateString","display","paddingTop","Map","zoom","hover","clicked","currentPosition","infoBox","height","renderMarkers","onChildMouseEnter","_","childProps","onChildMouseLeave","onMapClick","bootstrapURLKeys","defaultCenter","center","defaultZoom","userLocation","singleMarker","currentMarker","defaultProps","IssuePanel","close","marginTop","faTimesCircle","UserIssues","componentDidMount","loadMessage","IssueHandler","rawIssues","calcIssueDistance","console","log","renderIssues","compareDistance","b","position","coords","sortedIssues","Location","latitude","longitude","sort","mapIssue","closeIssuePanel","getElementById","classList","toggle","showMap","p","IssuesPage","register","userDetails","token","login","pass","userObject","sendEmail","details","IssuesTable","faTable","Tooltip","placement","AdminPanel","faCogs","Blob","blob","saveAs","SuggestionBox","suggestions","showSuggestions","setShowSuggestions","suggestionHeight","setSuggestionHeight","faChevronUp","toggleIcon","setToggleIcon","fontWeight","faChevronDown","Suggestion","allocateClick","mostImportant","toDateString","AdminIssues","refreshIssueList","compareUserVotes","setIssuePriority","tableSetIssueStatus","setIssueStatus","makeIssueSuggestion","message","UserAuth","subject","createNotification","sortByUserVotes","issueData","location","filteredIssuesByDistance","suggestionRange","issuesByVotes","suggestionAllocation","newSuggestions","renderSuggestions","Popup","content","Notification","bottom","faCheckSquare","AdminPage","createPopUp","popupContent","clearPopUp","notificationMessage","setTimeout","setUser","clearUser","InputField","name","placeholder","required","ErrorBox","closeMe","faWindowClose","LoginForm","history","setUsername","password","setPassword","error","setError","onSubmit","preventDefault","localStorage","setItem","jwt","decode","dispatch","transitionName","transitionAppear","transitionAppearTimeout","transitionLeaveTimeout","transitionEnterTimeout","_username","_password","LoginPage","RegisterForm","firstName","lastName","email","confirmPassword","address","postCode","registerDetails","setRegisterDetails","RegsiterForm","ReportedMarker","down","faMapMarker","ReportIssueForm","initialReportDetails","reportDetails","setReportDetails","loading","setLoading","setUserLocation","setNewError","msg","duration","setCurrentLocation","CircularProgress","JSON","stringify","_reportDetails","rows","cols","faCaretDown","getUserLocation","Number","hoverDistance","ReportIssuePage","App","userData","to","faHome","isAuth","isStaff","faUserCog","removeItem","exact","path","render","compProps","Boolean","hostname","match","initialState","errMessage","notification","combineReducers","action","messageReducer","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","token_data","verify","exp","renderApp","ReactDOM","subscribe","serviceWorker","ready","registration","unregister","validateNumber","num","isNaN","date","checkMissingData","requiredKeys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","checkCorrectDataTypes","example","_i","_Object$keys","params","_i2","_Object$keys2"],"mappings":"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","file":"static/js/main.d2e9ece1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reportForm.2f12cb4d.png\";","module.exports = __webpack_public_path__ + \"static/media/reportMap.14634072.png\";","module.exports = __webpack_public_path__ + \"static/media/issueExample.5a338617.png\";","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Fade from 'react-reveal/Fade';\n\nimport * as reportFormExample from '../../images/reportForm.png'\nimport * as reportMapExample from '../../images/reportMap.png'\nimport * as issueExample from '../../images/issueExample.png'\n\n/* Icon imports */\nimport { faCircle, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nexport default class Home extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      pagination : 0\n    }\n\n    this.data = [\n      (\n        <div key='data1'>\n           <Fade>\n            <h1>Introduction</h1>\n            <p>\n              <b>Welcome!</b> This website serves the purpose of allowing members of the <b>local community </b> \n              to report issues that they come across. \n              <br/><br/><br/>\n              Once an issue has been <b>reported</b>, a member of staff will \n              quickly assign it a <b>priority</b> and will <b>allocate</b> a member\n              of staff to resolve the issue as promptly as possible.\n              <br/><br/><br/>\n              Once the issue has been resolved, you will receive an email update to\n              notify you of the resolution.\n            </p>\n          </Fade>\n        </div>\n       \n      ),\n      (\n        <div key='data2'>\n          <Fade>\n            <h1>Found an Issue?</h1>\n            <p>\n              Have you found an issue? If you want this issue to be resolved ASAP\n              why not report it? To report your issue, visit the<a className='link' href='/issues/report'>REPORT</a>\n              page.\n              <br/><br/>\n              Simply fill in the details of the issue and mark the location on the map!\n            </p>\n            <img src={reportFormExample} alt='report form'/>\n            <img src={reportMapExample} alt='report map'/>\n          </Fade>\n        </div>\n      ),\n      <div key='data3'>\n          <Fade>\n            <h1>Looking for local issues?</h1>\n            <p>\n              Are you looking for local reported issues? why not head over to the \n              <a className='link' href='/issues'>ISSUES</a> page and have a look!\n              <br/><br/>\n              The issues page allows you to browse all reported issues and view\n              their current status and community votes.\n            </p>\n            <img style={{width:'80%'}} src={issueExample} alt='example of issue'/>\n          </Fade>\n        </div>\n    ]\n  }\n\n  renderPagination = () => {\n    let circles = []\n    for(let i = 0; i <= this.data.length -1; i++) \n    {\n      const cn = (i === this.state.pagination ? 'active' : '')\n      circles.push(\n        (<FontAwesomeIcon key={`circle${i}`}className={cn} icon={faCircle}/>)\n      )\n    }\n    return circles\n  }\n  \n  increasePagination = () => {\n    const pagination = (this.state.pagination < this.data.length - 1 ? this.state.pagination + 1 : 0)\n    this.setState({pagination})\n  }\n\n  decreasePagination = () => {\n    const pagination = (this.state.pagination > 0 ? this.state.pagination -1 : this.data.length - 1)\n    this.setState({pagination})\n  }\n\n  componentDidMount() {\n    document.title = this.props.title\n  }\n\n  render() {\n    return (\n      <>\n        <div className='section relative shadow h-centered-margin home-cover'>\n          <div className='ccentered padding-20'>\n  \n            {this.data[this.state.pagination]}\n  \n            <div className='page-circles'>\n              <FontAwesomeIcon className='arrow' icon={faChevronLeft} onClick={() => this.decreasePagination()}/>\n              {this.renderPagination()}\n              <FontAwesomeIcon className='arrow' icon={faChevronRight} onClick={() => this.increasePagination()}/>\n            </div>\n          </div>\n          \n        </div>\n      </>\n    )\n  }\n}","// module responsible for handle issue retrieval and submission\nimport axios from 'axios'\n\nconst api_url = 'http://localhost:8080/issues'\n\nexport const fetchAllIssues = () => {\n\n    const api_endpoint = `${api_url}/fetch`\n\n    return axios\n        .get(api_endpoint)\n        .then(response => {\n            // console.log(response.data)\n            return response.data\n        })\n        .catch(err => {\n            throw err.response\n        })\n}\n\nexport const reportIssue = (issue) => {\n\n    const api_endpoint = `${api_url}/report`\n\n    return axios\n        .post(api_endpoint, issue)\n        .then(response => {\n            return response\n        })\n        .catch(err => {\n            throw err.response \n        })\n}\n\n// export const deleteIssue = (id) => {\n// }\n\nexport const updateIssuePriority = (id, priority) => {\n\n    const api_endpoint = `${api_url}/update/priority/${id}`\n\n    return axios\n        .put(api_endpoint, {priority})\n        .then(response => {\n            return response\n        })\n        .catch(err => {\n            throw err.response\n        })\n}\n\nexport const updateIssueStatus = (id, status) => {\n\n    const api_endpoint = `${api_url}/update/status/${id}`\n\n    return axios\n        .put(api_endpoint, {status})\n        .then(response => {\n            return response\n        })\n        .catch(err => {\n            throw err.response\n        })\n}\n\nexport const voteForIssue = (id, username) => {\n    // vote for issue\n    const api_endpoint = `${api_url}/upvote`\n    const data = { id, username }\n    return axios\n        .post(api_endpoint, data)\n        .then(response => {\n            return response.data\n        })\n        .catch(err => {\n            throw err.response\n        })\n}\n\nexport const voteAgainstIssue = (id, username) => {\n    // vote for issue\n    const api_endpoint = `${api_url}/downvote`\n    const data = { id, username }\n    return axios\n        .post(api_endpoint, data)\n        .then(response => {\n            return response.data\n        })\n        .catch(err => {\n            throw err.response\n        })\n}\n\nexport const fetchJobSheet = () => {\n    // fetch the job sheet for all issues that have been allocated\n    const api_endpoint = `${api_url}/joblist`\n\n    return axios\n        .get(api_endpoint, {responseType: 'blob'})\n        .then(response => {\n            return response\n        })\n        .catch(err => {\n            throw err.response\n        })\n}\n\nexport const filterIssues = (issues, filter) => {\n    \n    if(!issues.length) throw new Error('No issues available')\n\n    let filteredIssues = issues\n\n    for(const key of Object.keys(filter)) {\n        if(filter[key] !== 'Select...' && Object.keys(issues[0]).indexOf(key) >= 0) {\n            filteredIssues = filteredIssues.filter(issue => {\n                return (issue[key]).toString() === (filter[key]).toString()\n            })\n        }\n    }\n    return filteredIssues\n}\n\nexport const splitIssues = (issues, rpp=10) => {\n    if(!issues) throw new Error('No issues available')\n    let splitIssues = [];\n\n    for(let i = 0; i <= issues.length; i+=rpp) {\n        let temp = issues.slice(i, i+rpp)\n        splitIssues.push(temp)\n    }\n\n    return splitIssues\n}\n\n\nexport default {\n    fetchAllIssues,\n    reportIssue,\n    updateIssuePriority,\n    updateIssueStatus,\n    voteForIssue,\n    voteAgainstIssue,\n    fetchJobSheet,\n    filterIssues,\n    splitIssues\n}","\nconst deg2rad = (value) => {\n    return value * (Math.PI/180)\n}\n\n// haversine formula for calculating distance between two lat,lng coordinates\n// calculates 'as the flow flys' distance between points, not complete accuracy\nconst distance = (lat1,lon1,lat2,lon2) => {\n    const R = 6371; // radius of earth\n    const dLat = deg2rad(lat2-lat1)\n    const dLon = deg2rad(lon2-lon1)\n\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n      Math.sin(dLon/2) * Math.sin(dLon/2)\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a))\n    return R * c;\n}\n\nconst getLocationFailure = () => {\n    alert('There was an error or your request timed out.')\n}\n\nconst getCurrentLocation = (success, fail=getLocationFailure) => {\n    const options = {\n        enableHighAccuracy: true,\n        timeout: 10000,\n        maximumAge: 0\n    }\n    if(navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(success, fail, options)\n    }\n}\n\nexport default {\n    distance,\n\tgetCurrentLocation\n}","import React, {useState} from 'react';\n\nconst TableDropDown = ({initialValue, options, changeCallback, id, defaultValue}) => {\n    const [value, setValue] = useState((defaultValue ? defaultValue : initialValue))\n\n    const renderOptions = () => {\n        if(defaultValue) {\n            options = [{value:null, label:'Select...'}].concat(options)\n        }\n\n        const renderedOptions = options.map((option,i) => {\n            return (\n                <option key={`${id}option${i}`} value={option.value}>{option.label}</option>\n            )\n        })\n        return renderedOptions\n    }\n\n    const setCurrentValue = (e) => {\n        const _value = e.target.value\n        setValue(_value)\n\n        if(changeCallback) {\n            changeCallback(id, _value)\n        }\n    }\n\n    return (\n        <select className='' value={value} onChange={setCurrentValue}>\n            {renderOptions()}\n        </select>\n    )\n}\n\nexport default TableDropDown","export const USER_STATUS_OPTIONS = [\n    {value: 'reported', label:'reported'},\n    {value: 'allocated', label:'allocated'},\n    {value: 'resolved', label:'resolved'}\n]\n\nexport const ADMIN_STATUS_OPTIONS = [\n    {value: 'pending', label:'pending'},\n    {value: 'reported', label:'reported'},\n    {value: 'allocated', label:'allocated'},\n    {value: 'resolved', label:'resolved'}\n]\n\nexport const PRIORITY_OPTIONS = [\n    {value: undefined, label:'0'},\n    {value: 1,label: '1'},\n    {value: 2,label: '2'},\n    {value: 3,label: '3'},\n    {value: 4,label: '4'},\n    {value: 5,label: '5'}\n]","import React, {useState} from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n/* Icon imports */\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\n\n// component imports\nimport TableDropDown from './table-dropdown'\n\n// utils imports\nimport {USER_STATUS_OPTIONS, ADMIN_STATUS_OPTIONS, PRIORITY_OPTIONS} from '../utils/constants/issueData'\n\n\nconst IssuesFilter = ({filterCallback, isAdmin}) => {\n    const [filter, setFilter] = useState({})\n\n    const STATUS_OPTIONS = isAdmin ? ADMIN_STATUS_OPTIONS : USER_STATUS_OPTIONS\n\n    const updateFilter = (id, value) => {\n        const currentFilter = filter\n        currentFilter[id] = value\n\n        setFilter(currentFilter)\n\n        filterCallback(currentFilter)\n    }\n\n    const resetFilter = () => {\n        setFilter({})\n        filterCallback({})\n    }\n\n    return (\n        <div className='filter-bar flex-50 gap-right'>\n            <p className='panel-header'><FontAwesomeIcon icon={faFilter} />Filter - <span className='link' onClick={() => resetFilter()}>Reset Filter</span></p>\n            <div className='filter-container'>\n                <div className='item'>\n                    <span>Status</span>\n                    <TableDropDown\n                        options={STATUS_OPTIONS}\n                        id={'status'}\n                        initialValue={filter.status}\n                        changeCallback={updateFilter}\n                        defaultValue={true}\n                    />\n                </div>\n                <div className='item'>\n                    <span>Priority</span>\n                    <TableDropDown \n                        options={PRIORITY_OPTIONS}\n                        id={'priority'}\n                        initialValue={filter.priority}\n                        changeCallback={updateFilter}\n                        defaultValue={true}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default IssuesFilter","import validate from '@mitch137/validation'\n\nconst msPerDay = 1000 * 60 * 60 * 24\n\n\nconst difference = (date1, date2) => {\n\n    validate.checkUndefinedParams({date1, date2})\n\n    validate.validateDate(date1)\n    validate.validateDate(date2)\n\n    date1 = new Date(date1)\n    date2 = new Date(date2)\n\n    date1 = Date.UTC(date1.getFullYear(), date1.getMonth(), date1.getDate())\n    date2 = Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate())\n\n    // console.log(`[1]=${date1}, [2]=${date2}, [D]=${Math.abs(date1-date2)}`)\n    return Math.abs(date1 - date2)\n}\n\nconst timestampDays = (timestamp) => { \n\n    // console.log(timestamp)\n    validate.checkUndefinedParams({timestamp})\n    validate.validateTimestamp(timestamp)\n    return Math.floor(timestamp / msPerDay) \n}\n\nexport default { \n    difference,\n    timestampDays\n}","import React from 'react'\n\n// module imports\nimport {voteForIssue, voteAgainstIssue} from '../modules/issueHandler'\n\n// component imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// icon imports\nimport { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons'\n\n\nconst VotePanel = ({store, stateIssue, setStateIssue})=> {\n\n\tconst thankyouAlert = () => {\n\t\talert(`Thank you for voting for the issue #${stateIssue.id}!`)\n\t}\n\n\tconst failedVoteAlert = () => {\n\t\talert(`Sorry, you cannot vote for issue #${stateIssue.id}... \nIf you wish to change your vote, simply vote for the other option.`)\n\t}\n\n\tconst forVote = () => {\n\t\tvoteForIssue(stateIssue.id, store.getState().userReducer.user.username)\n\t\t\t.then((newVotes) => setStateIssue({...stateIssue, votes : newVotes}))\n\t\t\t.then(() => thankyouAlert())\n\t\t\t.catch(() => failedVoteAlert())\n    }\n\n    const againstVote = () => {\n\t\tvoteAgainstIssue(stateIssue.id, store.getState().userReducer.user.username)\n\t\t\t.then((newVotes) => setStateIssue({...stateIssue, votes : newVotes}))\t\n\t\t\t.then(() => thankyouAlert())\n\t\t\t.catch(() => failedVoteAlert())\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<span>Think this issue is <b>important?</b> Vote for it!</span>\n\t\t\t<div className='gap-left inline'>\n\t\t\t\t<button onClick={() => forVote()} className='upvote'><FontAwesomeIcon icon={faArrowUp}/></button>\n\t\t\t\t<button onClick={() => againstVote()} className='downvote'><FontAwesomeIcon icon={faArrowDown}/></button>\n\t\t\t</div>\n\t\t</>\n\t)\n\n}\n\nexport default VotePanel","// standard imports\nimport React, {useState} from 'react'\n\n// utils imports\nimport DateHandler from '../utils/functional/dateHandler'\n\n// custom component imports\nimport VotePanel from './votePanel'\n\n// standard component imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// icon imports\nimport { faCheckCircle, faClock, faFlag} from '@fortawesome/free-solid-svg-icons'\n\n// animation imports\nimport Fade from 'react-reveal/Fade'\n\nconst IssueCard = ({issue, store}) => {\n\n    const [stateIssue, setStateIssue] = useState(issue)\n\n    let dateReported = new Date(stateIssue.dateSubmitted)\n        dateReported = `${dateReported.getDate()}/${dateReported.getMonth()}/${dateReported.getFullYear()}`\n    const streetName = (stateIssue.streetName ? stateIssue.streetName : 'N/A')\n    \n    const timeElapsed = stateIssue.dateResolved ? stateIssue.dateResolved : Date.now()\n    const daysElapsed = DateHandler.timestampDays(DateHandler.difference(stateIssue.dateSubmitted, timeElapsed))\n\n    let titleStyle;\n    let titleIcon;\n\n    switch(issue.status) {\n        case 'reported':\n            titleStyle = {\n                backgroundColor : '#eb6060',\n                color: 'whitesmoke'\n            }\n            titleIcon = faFlag\n            break\n        case 'allocated':\n            titleStyle = {\n                backgroundColor : '#f7e463',\n                color : '#222222'\n            }\n            titleIcon = faClock\n            break\n        case 'resolved':\n            titleStyle = {\n                backgroundColor : '#7cd992',\n                color : 'whitesmoke'\n            }\n            titleIcon = faCheckCircle\n            break\n        default:\n            break\n    }\n    \n    return (\n        <Fade>\n            <div key={stateIssue.id} className='issue-card shadow'>\n                <div style={titleStyle} className='title'>\n                    <FontAwesomeIcon icon={titleIcon}/>\n                    <span>#{stateIssue.id} Status: {stateIssue.status} - Votes: {stateIssue.votes}</span>\n                </div>\n                <ul className='details'>\n                    <li>\n                        <span className='type'>Description</span>\n                        <p>{stateIssue.description}</p>\n                    </li>\n                    <li>\n                        <span className='type'>Type</span>\n                        <p>{stateIssue.type}</p>\n                    </li>\n                    <li>\n                        <span className='type'>Date Reported</span>\n                        <p>{dateReported}</p>\n                        <span className='type'>Time Elapsed</span>\n                        <p>{daysElapsed} day(s)</p>\n                    </li>\n                    <li>\n                        <span className='type'>Location</span>\n                        <p>Lat: {stateIssue.lat.toFixed(5)}</p>\n                        <p>Lng: {stateIssue.lng.toFixed(5)}</p>\n                    </li>\n                    <li>\n                        <span className='type'>Street Name</span>\n                        <p>{streetName}</p>\n                    </li>\n                    <li>\n                        <span className='type'>Status</span>\n                        <p>{stateIssue.status}</p>\n                    </li>\n                    <li>\n                        <span className='type'>Priority</span>\n                        <p>{stateIssue.priority}</p>\n                    </li>\n                    {\n                        stateIssue.distance ? \n                        (\n                            <li>\n                                <span className='type'>Distance from Current Location</span>\n                                <p>{stateIssue.distance} KM</p>\n                            </li>\n                        ) : null\n                    }\n                </ul>\n                <div className='gap-left inline vote w-100'>\n                    {stateIssue.status === 'reported' ?\n                        <VotePanel store={store} setStateIssue={setStateIssue} stateIssue={stateIssue}/>\n                        :\n                        <span>Voting for this issue has been <b>closed.</b></span>\n                    }\n                </div>\n                <div className='inline user'>\n                    <em>Issue reported by: {stateIssue.username}</em>\n                </div>\n            </div>\n        </Fade>\n        \n    )\n}\n\nexport default IssueCard","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n/* Icon imports */\nimport { faList } from '@fortawesome/free-solid-svg-icons'\n\n// component imports\nimport IssueCard from './issueCard'\n\nconst IssueList = ({issues, numIssues, store, toggleMap}) => {\n\n    const renderIssues = () => {\n        const issueCards = issues.map((issue,i) => {\n            return (\n                <IssueCard key={issue.id} store={store} issue={issue}/>\n            )\n        })\n\n        return issueCards\n    }\n\n    return (\n        <>\n        <p className='panel-header relative'><FontAwesomeIcon icon={faList}/>Issues -\n            <span className='link' onClick={toggleMap}> View on Map</span>\n            <span className='sub abs-right'>Displaying {numIssues} Issues</span>\n        </p>\n        {\n            issues ? <div className='issue-list'>{renderIssues()}</div> : null\n        }\n        </>\n    )\n}\n\nexport default IssueList","import React from 'react'\n\nconst Pagination = ({pagination, numberOfPages, setPagination}) => {\n        let paginationDOM = []\n\n        let min = (pagination - 1 < 0 ? 0 : pagination - 1);\n        let max = (pagination + 1 >= numberOfPages ? numberOfPages - 1 : pagination + 1)\n\n        const changePagination = value => {\n            window.scrollTo(0,0)\n            setPagination(value)\n            \n        }\n\n        for(let i = min; i <= max; i++) {\n            const cn = (i===pagination ? 'item active' : 'item')\n            paginationDOM.push(\n                (<button className={cn} key={`btn_page${i}`} onClick={() => changePagination(i)}>{i}</button>)\n            )\n        }\n\n        return (\n            <div className='pagination'>\n                {paginationDOM}\n            </div>\n        )\n    }\n\nexport default Pagination","import React from 'react'\n\nconst Marker = ({issue, onClick}) => {\n\n\tlet backgroundColor;\n\tlet color = 'white';\n\n\tswitch(issue.status) {\n        case 'reported':\n            backgroundColor = '#eb6060'\n            break\n        case 'allocated':\n\t\t\tbackgroundColor = '#f7e463'\n\t\t\tcolor = '#222222'\n            break\n        case 'resolved':\n            backgroundColor = '#7cd992'\n            break\n        default:\n            break\n\t}\n\n\tconst style = {backgroundColor, color}\n\n\treturn (\n\t\t<div onClick={onClick} className='pin' style={style}>\n\t\t\t{issue.id}\n\t\t</div>\n\t)\n}\nexport default Marker","import React, {Component} from 'react'\nimport GoogleMapReact from 'google-map-react'\n\nimport Marker from './marker'\n\nconst InfoBox = (props) => {\n\n\tconst dateReported = new Date(props.issue.dateSubmitted).toLocaleDateString()\n\n\treturn (\n\t\t<div className='info-box shadow'>\n\t\t\t{/* <div><b>Description</b>: {props.issue.description}</div> */}\n\t\t\t<div><b>Status</b>: {props.issue.status}</div>\n\t\t\t<div><b>Date Reported</b>: {dateReported}</div>\n\t\t\t<div style={{display:'block', paddingTop:'10px'}}>Click for more details!</div>\n\t\t</div>\n\t\t)\n  }\n\nclass Map extends Component {\n\n\tstatic defaultProps = {\n\t\tcenter: {lat: 40.73, lng: -73.93}, \n\t\tzoom: 12\n\t }\n\n\tstate = {\n\t\tissue: {},\n\t\tlat : '',\n\t\tlng: '',\n\t\tzoom: this.props.zoom,\n\t\thover: false,\n\t\tclicked:  false,\n\t\tcurrentPosition: false,\n\t\tinfoBox: false,\n\t\theight : this.props.height ? this.props.height : '350px'\n\t}\n\n\trenderMarkers = () => {\n\t\t// renders the issues provided as markers\n\t\tconst markers = this.props.issues.map(issue => {\n\t\t\treturn (\n\t\t\t\t<Marker \n\t\t\t\t\tkey={`marker${issue.id}`} \n\t\t\t\t\tlat={issue.lat} \n\t\t\t\t\tlng={issue.lng} \n\t\t\t\t\tissue={issue}\n\t\t\t\t\thover={this.state.hover}\n\t\t\t\t\tonClick={() => this.onClick()}\n\t\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t\treturn markers\n\t}\n\n\tonChildMouseEnter = (_, childProps) => {\n\t\tif (childProps.issue === undefined) return null\n\t\telse {\n\t\t  this.setState({\n\t\t\tissue: childProps.issue,\n\t\t\tlat: childProps.lat,\n\t\t\tlng: childProps.lng,\n\t\t\thover: true\n\t\t  })\n\t\t}\n\t  }\n\n\t  onChildMouseLeave = (_, childProps) => {\n\t\tif (childProps.issue === undefined) return null\n\t\telse {\n\t\t  this.setState({\n\t\t\tissue: {},\n\t\t\tlat: \"\",\n\t\t\tlng: \"\",\n\t\t\thover: false\n\t\t  })\n\t\t}\n\t  }\n\n\t  onClick = () => {\n\t\t//   console.log(this.state.issue)\n\t\t  this.setState({\n\t\t\t  clicked: !this.state.clicked\n\t\t  })\n\t\t  this.props.onMapClick(this.state.issue)\n\t  }\n\n\trender() {\n\n\t\t// console.log(this.props.issues)\n\n\t\tconst infoBox = this.state.hover ? <InfoBox lat={this.state.lat} lng={this.state.lng} issue={this.state.issue}/> : null\n\n\t\t// const currentPin = this.state.currentPin ? <CurrentPin lat={this.props.}\n\t\treturn (\n\t\t\t<div style={{ height: this.state.height, width: '100%' }}>\n\t\t\t\t<GoogleMapReact\n\t\t\t\t\tbootstrapURLKeys={{ key: 'AIzaSyAjld9X9LpHG8qabXQAG95iwU_YWTQ9ej0' }}\n\t\t\t\t\tdefaultCenter={this.props.center}\n\t\t\t\t\tdefaultZoom={this.props.zoom}\n\t\t\t\t\tcenter={this.props.userLocation}\n\t\t\t\t\tonChildMouseEnter={this.onChildMouseEnter}\n\t\t\t\t\tonChildMouseLeave={this.onChildMouseLeave}\n\t\t\t\t\tonClick={this.props.onClick}\n\t\t\t\t>\n\t\t\t\t{this.props.issues ? this.renderMarkers() : null}\n\t\t\t\t{infoBox}\n\t\t\t\t{this.props.singleMarker}\n\t\t\t\t{this.props.currentMarker}\n\t\t\t\t</GoogleMapReact>\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default Map","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n/* Icon imports */\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport Fade from 'react-reveal/Fade'\n\nconst IssuePanel = ({issue, close}) => {\n\n\t// console.log(issue)\n\n\treturn (\n\t\t<Fade>\n\t\t\t<div className='issue-panel flex-25 border-box padding-10 shadow gap-left anim-all-200'>\n\t\t\t<h1>Issue Details</h1>\n\t\t\t<ul>\n\t\t\t\t<li>Ref. No: {issue.id}</li>\n\t\t\t\t<li>Community Votes: {issue.votes}</li>\n\t\t\t\t<li>Status: {issue.status}</li>\n\t\t\t\t<li>Priority: {issue.priority}</li>\n\t\t\t\t<li>Status: {issue.status}</li>\n\t\t\t\t<li>Description: {issue.description}</li>\n\t\t\t\t<li>Date Reported: {issue.dateSubmitted}</li>\n\t\t\t\t<li>Distance from you: {issue.distance}KM</li>\n\t\t\t\t<li>Coordinates: <ul style={{marginTop:'1em'}}>\n\t\t\t\t\t\t<li>[LAT] {issue.lat}</li>\n\t\t\t\t\t\t<li>[LNG] {issue.lng}</li>\n\t\t\t\t\t</ul></li>\n\t\t\t\t<li>Reported By: {issue.username}</li>\n\t\t\t</ul>\n\t\t\t<span className='close' onClick={close}><FontAwesomeIcon icon={faTimesCircle}/></span>\n\t\t</div>\n\t\t</Fade>\n\t\t\n\t)\n}\n\nexport default IssuePanel","// standard imports\nimport React, {Component} from 'react'\n\n// custom module imports\nimport IssueHandler from '../modules/issueHandler'\n\n// utlls imports\nimport Location from '../utils/functional/location'\n\n// component imports\nimport IssuesFilter from './issuesFilter'\nimport IssuesList from './issueList'\nimport Pagination from './pagination'\nimport Map from './map'\nimport IssuePanel from './issuePanel'\n\nclass UserIssues extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            issues : null,\n            rawIssues : null,\n            numIssues : 0,\n            rpp : 5,\n            pagination : 0,\n            loadMessage : 'Loading...',\n            userLocation : {},\n            mapIssue : {},\n            showMap : false\n        }\n    }\n\n    componentDidMount = () => {\n        this.setState({loadMessage : 'Fetching issues...'})\n        IssueHandler.fetchAllIssues()\n            .then((response) => {\n                const rawIssues = response.filter(issue => issue.status !== 'pending')\n                this.setState({rawIssues, numIssues : rawIssues.length})\n                this.calcIssueDistance()\n            })\n            .catch(err => console.log(err))\n    }\n\n    renderIssues = (issues) => {\n        const splitIssues = IssueHandler.splitIssues(issues, this.state.rpp)\n        this.setState({issues:splitIssues})\n    }\n\n    filterIssues = (filter) => {\n        const filteredIssues = IssueHandler.filterIssues(this.state.rawIssues, filter)\n        this.setState({pagination:0, numIssues:filteredIssues.length})\n        this.renderIssues(filteredIssues)\n    }\n\n    compareDistance = (a, b) => {\n        if(a.distance < b.distance) return -1\n        if(a.distance > b.distance) return 1\n        return 0\n    }\n\n    success = (position) => {\n        const coords = position.coords\n        const issues = this.state.rawIssues.map(issue => {\n            const distance = Location.distance(coords.latitude, coords.longitude, issue.lat, issue.lng)\n            return issue = {...issue, distance: distance.toFixed(2)}\n        })\n        const sortedIssues = issues.sort(this.compareDistance)\n        // console.log(coords)\n        this.setState({rawIssues:sortedIssues, userLocation: coords})\n\n        this.renderIssues(sortedIssues)\n    }\n\n    calcIssueDistance = () => {\n        this.setState({loadMessage : 'Calculating distance from location...'})\n        Location.getCurrentLocation(this.success)\n    }\n\n    onMapClick = (issue) => {\n        this.setState({mapIssue : issue})\n    }\n\n    closeIssuePanel = () => {\n        this.setState({mapIssue: {}})\n    }\n\n    toggleMap = () => {\n        document.getElementById('map').classList.toggle('hidden')\n    }\n\n    render() {\n\n        return (\n            <div>\n                {this.state.issues ?\n                    <>\n                    <IssuesFilter filterCallback={this.filterIssues} isAdmin={false}/>\n                    <div id='map' className='flex hidden'>\n                        <div className={this.state.mapIssue.id ? 'flex-70 flex-no-grow anim-all-400' : 'flex-70 flex-grow anim-all-400'}>\n                            <Map onMapClick={(issue) => this.onMapClick(issue)} userLocation={[this.state.userLocation.latitude, this.state.userLocation.longitude]} zoom={9} issues={this.state.rawIssues}/>\n                        </div>\n                        { this.state.mapIssue.id ? \n                            <IssuePanel issue={this.state.mapIssue} close={() => this.closeIssuePanel()}/>\n                            :\n                            null\n                        }\n                    </div>\n                    <div>\n                        <IssuesList toggleMap={() => this.toggleMap()} issues={this.state.issues[this.state.pagination]} numIssues={this.state.numIssues} store={this.props.store}/>\n                        <Pagination pagination={this.state.pagination} numberOfPages={this.state.issues.length} setPagination={(p) => {this.setState({pagination:p})}}/>\n                    </div>\n                        \n                        \n                    </>\n                :\n                    <div className='loading-blocked'><span>{this.state.loadMessage}</span></div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default UserIssues","// standard module imports\nimport React, {Component} from 'react'\n\nimport UserIssues from '../userIssues'\n\nclass IssuesPage extends Component {\n\n    componentDidMount() {\n        document.title = this.props.title\n    }\n    \n    render () {\n        return (\n            <div className='fill gap-bot shadow'>\n                <h1>Reported Issues</h1>\n                <UserIssues store={this.props.store}/>\n            </div>\n        )\n    }\n    \n}\n\nexport default IssuesPage","// module for handling user authentication requests through api\n\n// standard imports\nimport axios from 'axios'\n\nconst api_url = 'http://localhost:8080/user'\n\nexport const register = (userDetails) => {\n\n    const api_endpoint = `${api_url}/register`\n\n    return axios\n        .post(api_endpoint, userDetails)\n        .then(response => {\n            return response.data.token\n        })\n        .catch(err => {\n            throw err.response\n        })\n}  \n\nexport const login = async (user, pass) => {\n    \n    const api_endpoint = `${api_url}/login`\n    const userObject = {\n        user,\n        pass\n    }\n\n    return axios\n        .post(api_endpoint, userObject)\n        .then(response => {\n            return response.data.token\n        }).catch(err => {\n            throw err.response\n        })\n}\n\nexport const sendEmail = async (details) => {\n    const api_endpoint = `${api_url}/message`\n    return axios   \n        .post(api_endpoint, details)\n        .then(response => {\n            return response\n        })\n        .catch(err => {\n            throw err.response\n        })\n}\n\nexport default { login, register, sendEmail}","/* Standard component imports */\nimport React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n/* Icon imports */\nimport { faTable } from '@fortawesome/free-solid-svg-icons'\n\nconst IssuesTable = ({issues, numIssues}) => {\n\n    return (\n        <>\n            <p className='panel-header relative'><FontAwesomeIcon icon={faTable}/>\n                Issues\n                <span className='sub abs-right'>Found {numIssues} results</span>\n            </p>\n            <div className='table-container yscroll'>\n                <table className='table'>\n                <thead>\n                    <tr>\n                        <th>\n                            <Tooltip placement='top' title='Unique value provided as a reference key for the issue.'>\n                                <span>Issue Ref.</span>\n                            </Tooltip>\n                        </th>\n                        <th>\n                            <Tooltip placement='top' title='Category the issue falls under.'>\n                                <span>Type</span>\n                            </Tooltip>\n                        </th>\n                        <th>\n                            <Tooltip placement='top' title='Description of the issue provided by the user.'>\n                                <span>Description</span>\n                            </Tooltip>\n                        </th>\n                        <th>\n                            <Tooltip placement='top' title='Number of relative votes this issue has received.'>\n                                <span>Votes Received</span>\n                            </Tooltip>\n                        </th>\n                        <th>\n                            <Tooltip placement='top' title='The date the issue was reported.'>\n                                <span>Date Reported</span>\n                            </Tooltip>\n                        </th>\n                        <th>\n                            <Tooltip placement='top' title='Time Elapsed since the issue was reported or resolved.'>\n                                <span>Days Elapsed</span>\n                            </Tooltip>\n                        </th>\n                        <th>\n                            <Tooltip placement='top' title='Latitude and Longitude coordinates of the issue.'>\n                                <span> (Lat,Lng)</span>\n                            </Tooltip>\n                        </th>\n                        <th>\n                            <Tooltip placement='top' title='Name of the (closest) street at the provided location.'>\n                                <span>Street Name</span>\n                            </Tooltip>\n                        </th>\n                        <th>\n                            <Tooltip placement='top' title='Name of the user who reported the issue.'>\n                                <span>Reported By</span>\n                            </Tooltip>\n                        </th>\n                        <th>\n                            <Tooltip placement='top' title='Current status of the issue.'>\n                                <span>Status</span>\n                            </Tooltip>\n                        </th>\n                        <th>\n                            <Tooltip placement='top' title='Priority assigned to the issue by staff. 0 Priority represents priority for that issue has not been assigned.'>\n                                <span>Priority</span>\n                            </Tooltip>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {issues}\n                </tbody>\n                </table>\n            </div>\n        </>\n    )\n}\n\nexport default IssuesTable","import React from 'react'\n\nimport { saveAs } from 'file-saver'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { fetchJobSheet } from '../modules/issueHandler'\n\n/* Icon imports */\nimport { faCogs } from '@fortawesome/free-solid-svg-icons'\n\nconst AdminPanel = (props) => {\n\n\tconst fetchJobList = () => {\n\t\tfetchJobSheet()\n\t\t\t.then((response) => new Blob([response.data], {type: 'application/pdf'}))\n\t\t\t.then((blob) => saveAs(blob, 'joblist.pdf'))\n\t\t\t.catch((response) => console.log(response))\n\t}\n\n\treturn (\n\t\t<div className='flex-30'>\n\t\t\t<p className='panel-header'><FontAwesomeIcon icon={faCogs}/>Admin Panel</p>\n\t\t\t<span>Generate a list of jobs that have been allocated and require resolution.</span>\n\t\t\t<button onClick={() => fetchJobList()} className='btn gap-top'>Generate Job Sheet</button>\n\t\t</div>\n\t)\n}\n\nexport default AdminPanel","import React, {useState} from 'react'\n\n// // standard component imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// icon imports\nimport { faChevronUp, faChevronDown} from '@fortawesome/free-solid-svg-icons'\n\nconst SuggestionBox = ({suggestions}) => {\n\n\tconst [showSuggestions, setShowSuggestions] = useState(true)\n\tconst [suggestionHeight, setSuggestionHeight] = useState('250px')\n\tconst [toggleIcon, setToggleIcon] = useState(faChevronUp)\n\n\tconst toggleShow = () => {\n\t\tsetShowSuggestions(!showSuggestions)\n\t\tif(showSuggestions) {\n\t\t\tsetSuggestionHeight('20px')\n\t\t\tsetToggleIcon(faChevronDown)\n\t\t} else {\n\t\t\tsetSuggestionHeight('250px')\n\t\t\tsetToggleIcon(faChevronUp)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='suggestion-box' style={{height : suggestionHeight}}>\n\t\t\t<p className='title panel-header'>Issue Suggestions\n\t\t\t\t<span style={{fontWeight : 'normal'}}> - These issues are <b>recommened</b> based on distance from the last allocated issue and then sorted by number of user votes.</span>\n\t\t\t\t<FontAwesomeIcon icon={toggleIcon} onClick={() => toggleShow()}/>\n\t\t\t</p>\n\t\t\t{showSuggestions ? suggestions: null}\n\t\t</div>\n\t)\n}\n\nexport default SuggestionBox","import React from 'react'\n\nimport Fade from 'react-reveal/Fade'\n\nconst Suggestion = ({issue, allocateClick, mostImportant}) => {\n\n\tconst dateReported = new Date(issue.dateSubmitted).toDateString()\n\n\treturn (\n\t\t<Fade>\n\t\t\t<div className='suggestion shadow'>\n\t<div className='head'>{mostImportant ? '[BEST] - ' : null}Issue Ref. #{issue.id} - Votes {issue.votes}</div>\n\t\t\t\t<div className='content'>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li><b>Type</b>: {issue.type}</li>\n\t\t\t\t\t\t<li><b>Status</b>: {issue.status}</li>\n\t\t\t\t\t\t<li><b>Date Reported</b>: {dateReported}</li>\n\t\t\t\t\t\t<li><b>Distance</b>: {issue.distance.toFixed(2)}KM</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t<button onClick={allocateClick}>Allocate</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fade>\n\t)\n}\n\nexport default Suggestion","// standard imports\nimport React, {Component} from 'react'\n\n// custom module imports\nimport IssueHandler from '../modules/issueHandler'\nimport UserAuth from '../modules/userAuthentication'\n\n// component imports\nimport IssuesTable from './issuesTable'\nimport TableDropDown from './table-dropdown'\nimport IssuesFilter from './issuesFilter'\nimport AdminPanel from './adminPanel'\nimport Pagination from './pagination'\nimport SuggestionBox from './suggestionBox'\nimport Suggestion from './suggestion'\n\n// utils imports\nimport {ADMIN_STATUS_OPTIONS, PRIORITY_OPTIONS} from '../utils/constants/issueData'\nimport DateHandler from '../utils/functional/dateHandler'\nimport Location from '../utils/functional/location'\n\nclass AdminIssues extends Component {\n    \n    constructor(props) {\n        super(props)\n\n        this.state = {\n            issues : null,\n            rawIssues : null,\n            numIssues : 0,\n            rpp : 15,\n            pagination : 0,\n            currentFilter : {},\n            suggestions : [],\n            suggestionRange : 1,\n        }\n    }\n\n    // fetch all issues when the component is loaded\n    componentDidMount = () => {\n        this.refreshIssueList()\n    }\n\n    compareUserVotes = (a, b) => {\n        if(a.votes > b.votes) return -1\n        if(a.votes < b.votes) return 1\n        return 0\n    }\n\n    setIssuePriority = (id, priority) => {\n        IssueHandler.updateIssuePriority(id, priority)\n            .then(() => this.refreshIssueList())\n            .catch(err => console.log(err))\n    }\n\n    tableSetIssueStatus = (id, status) => {\n        // pseudo function to ensure that suggestions are only made when table status is changed\n        this.setIssueStatus(id, status)\n        if(status === 'allocated') this.makeIssueSuggestion(id)\n        else this.setState({suggestions: []})\n    }\n\n    setIssueStatus = (id, status) => {\n        // console.log(`id: ${id} status: ${status}`)\n        IssueHandler.updateIssueStatus(id, status)\n            .then(() => this.refreshIssueList())\n            .then(() => {\n                const user = this.props.store.getState().userReducer.user.username\n                const subject = `Reported Issue Status UPDATE`\n                const message = `<p>Issue Ref. #${id} status has been updated to ${status}.\n                <a href='localhost:3000/issues'>Click Here</a> to view your updated issues </p>`\n                UserAuth.sendEmail({user, subject, message})\n            })\n            .then(() => this.props.createNotification(`Issue ${id} has been updated to ${status}.`))\n            .catch(err => console.log(err))\n    }\n\n    filterIssues = (filter) => {\n        const filteredIssues = IssueHandler.filterIssues(this.state.rawIssues, filter)\n        this.setState({currentFilter:filter, pagination:0, numIssues: filteredIssues.length})\n        this.sortByUserVotes(filteredIssues)\n    }\n\n    refreshIssueList = () => {\n        IssueHandler.fetchAllIssues()\n            .then((response) => {\n                const rawIssues = response\n                this.setState({rawIssues, numIssues : rawIssues.length})\n                this.filterIssues(this.state.currentFilter)\n            })\n            .catch(err => console.log(err))\n    }\n\n    sortByUserVotes = (issues) => {\n        const sortedIssues = issues.sort(this.compareUserVotes)\n        this.renderIssues(sortedIssues)\n    }\n\n    // createIssuePopUp = (issue) => {\n\n    //     const dateReported = new Date(issue.dateSubmitted).toLocaleDateString()\n    //     const timeElapsed = issue.dateResolved ? issue.dateResolved : Date.now()\n    //     const daysElapsed = DateHandler.timestampDays(DateHandler.difference(issue.dateSubmitted, timeElapsed))\n\n    //     const content = (\n    //         <ul style={{listStyle: 'none', paddingLeft: '0'}}>\n    //             <li><b>Issue Ref.</b> {issue.id}</li>\n    //             <li><b>Type</b> {issue.type}</li>\n    //             <li><b>Description</b> {issue.description}</li>\n    //             <li><b>Vote Count</b> {issue.votes}</li>\n    //             <li><b>Date Reported</b> {dateReported}</li>\n    //             <li><b>Days Elapsed</b> {daysElapsed}</li>\n    //             <li><b>Location</b> [{issue.lat}][{issue.lng}]</li>\n    //             <li><b>Street Name</b> {issue.streetName}</li>\n    //             <li><b>Reported By</b> {issue.username}</li>\n    //         </ul>\n    //     )\n\n    //     this.props.createPopUp(content)\n    // }\n\n    renderIssues = (issues) => {\n        const issueData = issues.map(issue => {\n\n            const description = (<div className='description'>{issue.description}</div>)\n            let dateReported = new Date(issue.dateSubmitted)\n                dateReported = `${dateReported.getDate()}/${dateReported.getMonth()}/${dateReported.getFullYear()}`\n            const timeElapsed = issue.dateResolved ? issue.dateResolved : Date.now()\n            const daysElapsed = DateHandler.timestampDays(DateHandler.difference(issue.dateSubmitted, timeElapsed))\n            \n                \n            const location = (`${issue.lat.toFixed(2)},${issue.lng.toFixed(2)}`)\n            const streetName = issue.streetName ? issue.streetName : '-'\n            \n            return (\n            <tr key={issue.id}>\n                <td>{issue.id}</td>\n                <td>{issue.type}</td>\n                <td>{description}</td>\n                <td>{issue.votes}</td>\n                <td>{dateReported}</td>\n                <td>{daysElapsed}</td>\n                <td>{location}</td>\n                <td>{streetName}</td>\n                <td>{issue.username}</td>\n                <td><TableDropDown \n                        initialValue={issue.status}\n                        options={ADMIN_STATUS_OPTIONS}\n                        id={issue.id}\n                        changeCallback={this.tableSetIssueStatus}\n                    /></td>\n                <td><TableDropDown \n                        initialValue={issue.priority ? issue.priority : undefined}\n                        options={PRIORITY_OPTIONS}\n                        id={issue.id}\n                        changeCallback={this.setIssuePriority}\n                    />\n                </td>\n            </tr>)\n        })\n\n        // seperate issues into chunks\n        const splitIssues = IssueHandler.splitIssues(issueData, this.state.rpp)\n        this.setState({issues:splitIssues})\n    }\n\n    makeIssueSuggestion = (id) => {\n        // fetch issue id\n        const target = this.state.rawIssues.filter(issue => issue.id === id)[0]\n        // get array of items by distance from selected issue\n        const issuesByDistance = this.state.rawIssues.map(issue => {\n            const distance = Location.distance(target.lat, target.lng, issue.lat, issue.lng)\n            return {...issue, distance}\n        })\n        // filter out target and issues that are already resolved / allocated\n        const filteredIssuesByDistance = issuesByDistance.filter(issue => {\n            return (issue.id !== target.id && issue.status === 'reported' && issue.distance <= this.state.suggestionRange)\n        })\n        if(filteredIssuesByDistance.length > 0) {\n            // order by user votes\n            const issuesByVotes = filteredIssuesByDistance.sort(this.compareUserVotes)\n            this.setState({suggestions: issuesByVotes})\n        } else {\n            this.setState({suggestions: []})\n            alert('There were no suggestions to be made.') // change this (kinda annoying)\n        }\n        \n    }\n\n    suggestionAllocation = (id) => \n    {\n        // remove issue from suggestions\n        const newSuggestions = this.state.suggestions.filter(issue => {\n            return issue.id !== id\n        })\n        this.setState({suggestions: newSuggestions})\n        // update issue status\n        this.setIssueStatus(id, 'allocated')\n    }\n\n\n    renderSuggestions = () => {\n        // console.log(this.state.suggestions)\n        let suggestions = []\n        const length = this.state.suggestions.length < 4 ? this.state.suggestions.length : 4\n        for(let i = 0; i < length; i++) {\n            suggestions.push(\n                <Suggestion mostImportant={i === 0}key={`suggestion${i}`} issue={this.state.suggestions[i]} allocateClick={() => this.suggestionAllocation(this.state.suggestions[i].id)}/>)\n        }\n        return suggestions\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.issues ?\n                    <>  \n                        {/* <button onClick={() => this.createIssuePopUp(this.state.rawIssues[0])}>Create Popup</button> */}\n                        <div className='flex'>\n                            <IssuesFilter filterCallback={this.filterIssues} isAdmin={true}/>\n                            <AdminPanel/>\n                        </div>\n                        { this.state.suggestions.length > 0 ? <SuggestionBox suggestions={this.renderSuggestions()}/> : null}\n                        <div> \n                            <IssuesTable issues={this.state.issues[this.state.pagination]} numIssues={this.state.numIssues}/>\n                            <Pagination pagination={this.state.pagination} numberOfPages={this.state.issues.length} setPagination={(p) => {this.setState({pagination:p})}}/>\n                        </div>\n                    </>\n                :\n                    <p>Loading Issues   ...</p>\n                }\n            </div>\n        )\n    }\n}\n\nexport default AdminIssues","import React from 'react'\n\nconst Popup = ({content, close}) => {\n\treturn (\n\t\t<>\n\t\t\t<div className='loading-blocked'></div>\n\t\t\t<div className='popup shadow'>\n\t\t\t\t{content}\n\t\t\t\t<span className='close link' onClick={close}>Close</span>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default Popup","import React from 'react'\n\nimport Fade from 'react-reveal/Fade'\n\n// standard component imports\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n// icon imports\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons'\n\nconst Notification = ({message}) => {\n\treturn (\n\t\t<div className='notification'>\n\t\t\t<Fade bottom>\n\t\t\t<div className='shadow'>\n\t\t\t\t<FontAwesomeIcon icon={faCheckSquare}/>\n\t\t\t\t<span>{message}</span>\n\t\t\t</div>\n\t\t\t</Fade>\n\t\t\t\n\t\t</div>\n\t\t\n\t\t\n\t)\n}\n\nexport default Notification","import React, {Component} from 'react'\n\nimport AdminIssues from '../adminIssues'\n\nimport Popup from '../popup'\nimport Notification from '../notification'\n\nclass AdminPage extends Component {\n\n    // eslint-disable-next-line\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            popupContent : ''\n        }\n    }\n\n    componentDidMount() {\n        document.title = this.props.title\n    }\n\n    createPopUp = (content) => {\n        this.setState({popupContent:content})\n    }\n\n    clearPopUp = () => {\n        this.setState({popupContent:''})\n    }\n\n    createNotification = (message) => {\n        this.setState({notificationMessage : message})\n        setTimeout(() => {\n            this.setState({notificationMessage: ''})\n        }, 3000)\n    }\n\n    render () {\n        return (\n            <>\n            {this.state.notificationMessage ? <Notification message={this.state.notificationMessage}/> : null}\n            {this.state.popupContent ? <Popup content={this.state.popupContent} close={() => this.clearPopUp()}/> : null}\n            <div className='fill shadow'>\n                <h1>Admin</h1>\n                <AdminIssues store={this.props.store} createPopUp={this.createPopUp} createNotification={this.createNotification}/>\n            </div>\n            </>\n        )\n    }\n}\n\nexport default AdminPage","export const setUser = user => {\n    return {\n        type : 'SET_USER',\n        user\n    }\n}\n\nexport const clearUser = () => {\n    return {\n        type : 'CLEAR_USER'\n    }\n}","import React from 'react';\n\nconst InputField = (props) => {\n    return (\n      <div className=\"row centered-margin\">\n        <span className=\"input-label\">{props.label}</span>\n        <input \n          value = {props.value} \n          onChange={props.onChange} \n          type={props.type} \n          name={props.label} \n          placeholder={props.placeholder ? props.placeholder : `Enter your ${props.label}`}\n          required={props.required}/>\n          \n      </div>\n    )\n  }\n\nexport default InputField;","import React from 'react';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons' \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst ErrorBox = ({message, closeMe}) => {\n    \n    return (\n        <div className='error-box'>\n            <div className='icon'>\n\n            </div>\n            <div className='info'>\n                <p>{message}</p>\n                <FontAwesomeIcon className='close-tag' onClick={closeMe} icon={faWindowClose} />\n            </div>\n        </div>\n    )\n}\n\nexport default ErrorBox;","// standard imports\nimport React, {useState} from 'react'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport jwt from 'jsonwebtoken'\n\n// custom imports\nimport {login} from '../../modules/userAuthentication'\nimport {setUser} from '../../actions/userActions'\n\n// component imports\nimport InputField from '../inputField'\nimport ErrorBox from '../utility/errorBox'\n\n\nconst LoginForm = ({store, history}) => {\n\n    // react states --- maybe remove the error?\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [error, setError] = useState(\"\")\n  \n    // updates the username state for the username input\n    const updateUsername = (e) => {\n      const _username = e.target.value\n      setUsername(_username)\n    }\n  \n    // updates the password state for the password input\n    const updatePassword = (e) => {\n      const _password = e.target.value\n      setPassword(_password)\n    }\n\n    const RenderErrorBox = () => {\n      return (\n        <ErrorBox message={error} closeMe={() => setError('')}/>\n      );\n    }\n  \n    // handles the login form submission logic\n    const onSubmit = (e) => {\n      e.preventDefault()\n      \n      // check the user credentials\n      login(username,password)\n        .then(response => {\n          try {\n            // write token to localStorage\n            const token = response\n            localStorage.setItem('token', token)\n            \n            // decode jsonwebtoken provided by server\n            const user = jwt.decode(token)\n            store.dispatch(setUser(user))\n\n            //redirect to home page\n            history.push('/')\n          } catch (err) {\n            // something internal has gone wrong. likely to be server logging\n          }\n        })\n        .catch(err => {\n          // an error occured with the login credentials\n          try{\n            setError(err.data)\n          } catch (err) { \n            // internal server error occured :( check server logs\n            setError('Internal Server Error')\n          }\n        })\n    }\n    \n    // visual representation of the loginForm component\n    return (\n        <div className='anim-movement centered'>\n          <form className='anim-movement form centered h-centered-margin shadow' onSubmit={onSubmit}>\n            <h1 className='header h-centered-margin'>LOGIN</h1>\n            <CSSTransitionGroup\n          transitionName=\"error-box\"\n          transitionAppear={true}\n          transitionAppearTimeout={200}\n          transitionLeaveTimeout={200}\n          transitionEnterTimeout={200}\n        >{error ? RenderErrorBox() : null}</CSSTransitionGroup>\n            <div className=\"input-fields h-centered-margin\">\n              <InputField label={\"Username\"}  type={\"text\"} value={username} onChange={updateUsername}/>\n              <InputField label={\"Password\"}  type={\"password\"} value={password} onChange={updatePassword}/>\n            </div>\n            <div className='form-footer'>\n              <button className=\"submit-button\" type='submit'>Login In!</button>\n              <a href='/register'>Don't have an account?</a>\n            </div>\n          </form>\n          \n        </div>\n    )\n  }\n\nexport default LoginForm","import React, {Component} from 'react'\n\nimport LoginForm from '../forms/loginForm'\n\nexport default class LoginPage extends Component {\n\n\tcomponentDidMount() {\n\t\tdocument.title = this.props.title\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<LoginForm history={this.props.history} store={this.props.store}/>\n\t\t\t</>\n\t\t)\n\t}\n}","// standard imports\nimport React, {useState} from 'react'\nimport { CSSTransitionGroup } from 'react-transition-group'\nimport jwt from 'jsonwebtoken'\n\n// custom imports\nimport {register} from '../../modules/userAuthentication'\nimport {setUser} from '../../actions/userActions'\n\n// component imports\nimport InputField from '../inputField'\nimport ErrorBox from '../utility/errorBox'\n\nconst RegisterForm = ({store, history}) => {\n\n    // react state for user registration credentials\n    const [registerDetails, setRegisterDetails] = useState({\n      firstName : \"\",\n      lastName : \"\",\n      email : \"\",\n      username : \"\",\n      password : \"\",\n      confirmPassword : \"\",\n      address : \"\",\n      postCode: \"\"\n    })\n    const [error, setError] = useState(\"\")\n\n    const RenderErrorBox = () => {\n      return (\n        <ErrorBox message={error} closeMe={() => setError('')}/>\n      );\n    }\n  \n    // updates the first name state for input field\n    const updateFirstName = (e) => {\n      const firstName = e.target.value\n      setRegisterDetails({...registerDetails, firstName})\n    }\n\n    // updates the last name state for input field\n    const updateLastName = (e) => {\n      const lastName = e.target.value\n      setRegisterDetails({...registerDetails, lastName})\n    }\n\n    // updates username state for input field\n    const updateUsername = (e) => {\n      const username = e.target.value\n      setRegisterDetails({...registerDetails, username})\n    }\n  \n    // updates password state for password field\n    const updatePassword = (e) => {\n      const password = e.target.value\n      setRegisterDetails({...registerDetails, password})\n    }\n\n    const updateConfirmPassword = (e) => {\n      const confirmPassword = e.target.value\n      setRegisterDetails({...registerDetails, confirmPassword})\n    }\n    \n    const updateEmail = (e) => {\n      const email = e.target.value\n      setRegisterDetails({...registerDetails, email})\n    }\n\n    const updateAddress = (e) => {\n      const address = e.target.value\n      setRegisterDetails({...registerDetails, address})\n    }\n\n    const updatePostCode = (e) => {\n      const postCode = e.target.value\n      setRegisterDetails({...registerDetails, postCode})\n    }\n\n    // form submission for the register form\n    const onSubmit = (e) => {\n      e.preventDefault()\n      \n      // attempt to create user in databse through api with inputted credentials\n      register(registerDetails)\n        .then(response => {\n          try {\n            // write token to local storage\n            const token = response\n            localStorage.setItem('token', token)\n            \n            // decode token to user\n            const user = jwt.decode(token)\n            store.dispatch(setUser(user))\n\n            // redirect to home page once registration is complete\n            history.push('/') \n          } catch (err) {\n            // something else went wrong (check server logs)\n            setError('There was an unexpected error, Please try again.')\n          }\n            \n        })\n        .catch(err => {\n          console.log(err)\n          // invalid user credentials, display to user\n          setError(err.data)\n        })\n    }\n    \n    // visual return of the component\n    return (\n      <div className='centered'>  \n        <form className='form centered h-centered-margin shadow' onSubmit={onSubmit}>\n          <h1 className='header h-centered-margin'>REGISTER</h1>\n          <CSSTransitionGroup\n          transitionName=\"error-box\"\n          transitionAppear={true}\n          transitionAppearTimeout={200}\n          transitionLeaveTimeout={200}\n          transitionEnterTimeout={200}\n        >{error ? RenderErrorBox() : null}</CSSTransitionGroup>\n          <div className=\"input-fields h-centered-margin\">\n            <div className=\"input-double\">\n              <InputField label={\"First Name\"}  type={\"text\"} value={registerDetails.firstName} onChange={updateFirstName}/>\n              <InputField label={\"Last Name\"} type={\"text\"} value={registerDetails.lastName} onChange={updateLastName}/>\n            </div>\n            <InputField label={\"Email Address\"}  type={\"text\"} value={registerDetails.email} onChange={updateEmail}/>\n            <InputField label={\"Username\"}  type={\"text\"} value={registerDetails.username} onChange={updateUsername}/>\n            <div className='input-double'>\n              <InputField label={\"Password\"}  type={\"password\"} value={registerDetails.password} onChange={updatePassword}/>\n              <InputField label={\"Confirm Password\"} placeholder={\"Confirm your password\"} type={\"password\"} value={registerDetails.confirmPassword} onChange={updateConfirmPassword}/>\n            </div>\n            <div className=\"input-double\">\n              <InputField label={\"Address\"}  type={\"text\"} value={registerDetails.address} onChange={updateAddress}/>\n              <InputField label={\"Post Code\"} type={\"text\"} value={registerDetails.postCode} onChange={updatePostCode}/>\n            </div>\n          </div>\n          <div className='form-footer'>\n              <button className=\"submit-button\" type='submit'>Sign Up!</button>\n              <a href='/login'>Already Have An Account?</a>\n            </div>\n        </form>\n      </div>\n    )\n  }\n\nexport default RegisterForm","import React, {Component} from 'react'\n\nimport RegisterForm from '../forms/registerForm'\n\nexport default class RegsiterForm extends Component {\n\n\tcomponentDidMount() {\n\t\tdocument.title = this.props.title\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<RegisterForm history={this.props.history} store={this.props.store}/>\n\t\t\t</>\n\t\t)\n\t}\n}","import React, {useState} from 'react'\nimport { CSSTransitionGroup } from 'react-transition-group'\n\n/* Icon imports */\nimport { faCaretDown, faMapMarker } from '@fortawesome/free-solid-svg-icons'\n\n// component imports\nimport InputField from '../inputField'\nimport ErrorBox from '../utility/errorBox'\nimport Map from '../map'\n\n// out sourced ui imports\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Fade from 'react-reveal/Fade'\n\n// module imports\nimport {reportIssue} from '../../modules/issueHandler'\n\n// utils imports\nimport Location from '../../utils/functional/location'\n\n\nconst ReportedMarker = () => {\n    return (\n        <Fade down>\n            <FontAwesomeIcon className='reported-marker' icon={faMapMarker}/>\n        </Fade>\n    )\n}\n\nconst ReportIssueForm = ({store, history}) => {\n\n    const initialReportDetails = {\n        description: '',\n        type: 'Noise Pollution',\n        username: '',\n        dateSubmitted: 0,\n        lat: '',\n        lng: '',\n        streetName : ''\n    }\n    \n    const [reportDetails, setReportDetails] = useState(initialReportDetails)\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [pagination, setPagination] = useState(0)\n    const [userLocation, setUserLocation] = useState([])\n\n    const RenderErrorBox = () => {\n        return (\n          <ErrorBox message={error} closeMe={() => setError('')}/>\n        );\n      }\n\n    const setReportDescription = (e) => {\n        const description = e.target.value\n        setReportDetails({...reportDetails, description})\n    }\n    const setReportType = (e) => {\n        const type = e.target.value\n        setReportDetails({...reportDetails, type})\n    }\n\n    const setReportLat = (e) => {\n        const lat = e.target.value\n        setReportDetails({...reportDetails, lat: Number(lat)})\n    }\n\n    const setReportLng = (e) => {\n        const lng = e.target.value\n        setReportDetails({...reportDetails, lng: Number(lng)})\n    }\n\n    const setStreetName = (e) =>{\n        const streetName = e.target.value\n        setReportDetails({...reportDetails, streetName})\n    }\n    \n    const setNewError = (msg, duration=3000) => {\n        setError(msg)\n        setTimeout(() => {\n            setError('')\n        }, duration)\n    }\n    const submitIssueForm = (e) => {\n        e.preventDefault()\n\n        if(JSON.stringify(reportDetails) === JSON.stringify(initialReportDetails)) {\n            setNewError('please make changes...')\n        } else {\n            const _reportDetails = {\n                ...reportDetails,\n                username: store.getState().userReducer.user.username,\n                dateSubmitted: Date.now()\n            }\n    \n            // submit the issue report to the api\n            reportIssue(_reportDetails)\n                .then(() => {\n                    try {\n                        history.push('/issues')\n                    } catch(err) {\n                        setNewError('internal server error')\n                    }\n                })\n                .catch((err) => {\n                    setNewError(err.data)\n                })\n        }\n        \n    }\n\n    const setCurrentLocation = (position) => {\n        const lat = position.coords.latitude\n        const lng = position.coords.longitude\n\n        setUserLocation([lat, lng])\n\n        // setReportDetails({...reportDetails, lat, lng})\n        setLoading(false)\n    }\n\n    const getUserLocation = (e) => {\n        if(e) e.preventDefault()\n        setLoading(true)\n\n        Location.getCurrentLocation(setCurrentLocation)\n    }\n\n    const nextFormPage = (e) => {\n        e.preventDefault()\n        if(JSON.stringify(initialReportDetails) === JSON.stringify(reportDetails) || reportDetails.description === '') {\n            setNewError('please fill in the required fields...')\n            return false\n        } else {\n            getUserLocation()\n            setPagination(1)\n        }\n    }\n\n    const previousFormPage = (e) => {\n        e.preventDefault()\n        setPagination(0)\n    }\n\n    const mapClick = (e) => {\n        \n        const {lat, lng} = e\n        setReportDetails({...reportDetails, lat, lng})\n    }\n\n    return (\n        <>\n            {loading ? (<div className='loading-blocked'><span><CircularProgress color='inherit'/></span></div>) : null}\n            <div className='flex report-container'>\n                {/* manual report */}\n                <div className={pagination ? 'report flex-no-grow anim-all-400' : 'report flex-grow anim-all-400'}>\n                    {/* form --- start */}\n                    <form onSubmit={submitIssueForm} className='form shadow'>\n                        <h1 className='header h-centered-margin'>Report Issue</h1>\n                        <CSSTransitionGroup\n                            transitionName=\"error-box\"\n                            transitionAppear={true}\n                            transitionAppearTimeout={200}\n                            transitionLeaveTimeout={200}\n                            transitionEnterTimeout={200}\n                        >{error ? RenderErrorBox() : null}</CSSTransitionGroup>\n\n                        <div className='input-fields h-centered-margin'>\n                            { pagination === 0 ? \n                                <>\n                                 {/* issue details */}\n                                 <h2 className='section-header'>Issue Details</h2>\n                                 {/* description */}\n                                 <div className='row'>\n                                     <span className=\"input-label\">Issue Description</span>\n                                     <textarea required rows='4' cols='50' placeholder='Please enter the issue description...' style={{marginTop : '2em'}} value={reportDetails.description} onChange={setReportDescription}></textarea>\n                                 </div>\n                                 {/* type */}\n                                 <div className='row'>\n                                     <span className=\"input-label\">Issue Type</span>\n                                     {/* TODO: change this to custom dropdown component */}\n                                     <select className='input-select' value={reportDetails.type} onChange={setReportType}>\n                                         <option value='Noise pollution'>Noise pollution</option>\n                                         <option value='Speeding'>Speeding</option>\n                                         <option value='Pothole'>Pothole</option>\n                                         <option value='Litter'>Litter</option>\n                                     </select>\n                                     <FontAwesomeIcon className='cust-drop-icon' icon={faCaretDown}/>\n                                 </div>\n                                <div style={{marginTop: '2em'}}>\n                                    <button className='submit-button' onClick={nextFormPage}>Next</button>\n                                </div>\n                                \n                                </>\n                                :\n                                <>\n                                {/* location details */}\n                                <h2 className='section-header'>Issue Location</h2>\n                                <p className='hint'>** Click on the map to select the location of your issue or input the location manually.</p>\n                                {/* location - manual */}\n                                <div className='input-double'>\n                                            <InputField label={\"Latitude\"}  type={\"text\"} value={reportDetails.lat} onChange={setReportLat} required={true}/>\n                                            <InputField label={\"Longitude\"}  type={\"text\"} value={reportDetails.lng} onChange={setReportLng} required={true}/>\n                                </div>\n                                \n                                {/* streetName */}\n                                <InputField label={\"Street Name (Optional)\"}  type={\"text\"} value={reportDetails.streetName} onChange={setStreetName} required={false}/>\n                                    <div style={{marginTop: '2em'}}>\n                                        <button className='submit-button w-fill' onClick={previousFormPage}>Back</button>\n                                        <button className='submit-button w-fill gap-top' type='submit'>Submit</button>\n                                    </div>\n                                </>\n                            }\n                        </div>\n                    </form>\n                    {/* form --- end */}\n                </div>\n                {/* google maps frame */}\n                { pagination === 1 && userLocation.length > 0 ? \n                    <div className='map h-centered-margin fill gap-left shadow padding-20 anim-all-400'>\n                    <div className='frame'>\n                    <Map \n                        onClick={mapClick} \n                        singleMarker={reportDetails.lat && reportDetails.lng ?\n                            <ReportedMarker lat={reportDetails.lat} lng={reportDetails.lng} /> : null} \n                        height={'100%'} \n                        userLocation={userLocation} \n                        zoom={9} \n                        hoverDistance={30}\n                    />\n                    </div>\n                </div>\n                :\n                null\n                }\n                \n            </div>\n            \n        </>\n    )\n}\n\nexport default ReportIssueForm","import React, {Component} from 'react'\n\nimport ReportIssueForm from '../forms/reportIssueForm'\n\nexport default class ReportIssuePage extends Component {\n\n\tcomponentDidMount() {\n\t\tdocument.title = this.props.title\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ReportIssueForm history={this.props.history} store={this.props.store}/>\n\t\t\t</>\n\t\t)\n\t}\n}","/* standard imports */\nimport React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route, Link, Redirect\n} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n/* Icon imports */\nimport { faHome, faUserCog } from '@fortawesome/free-solid-svg-icons'\n\n/* Component Imports */\nimport Home from './components/pages/home'\nimport IssuesPage  from './components/pages/issues'\nimport AdminPage from './components/pages/admin'\nimport LoginPage from './components/pages/login'\nimport RegisterPage from './components/pages/register'\nimport ReportIssuePage from './components/pages/report'\n\n/* Custom imports */\n\nimport { clearUser } from './actions/userActions'\n\n// main app\nfunction App(props) {\n\n  const userData = props.store.getState().userReducer.user ? props.store.getState().userReducer : {} \n\n  const logout = () => {\n    // reset the redux state and delete localstorage user token\n    props.store.dispatch(clearUser())\n    localStorage.removeItem('token')\n  }\n  \n  return (\n    <div>\n      <Router>\n      <div className='nav shadow'>\n            <div className='fl-left h-centered-margin'>\n              <Link className='link' to='/'><FontAwesomeIcon icon={faHome}/>Home</Link>\n              {\n                userData.isAuth ?\n                <>\n                  <Link className='link' to='/issues'>Issues</Link>\n                  <Link className='link' to='/issues/report'>Report Issue</Link>\n                </>\n                :\n                null\n              }\n              \n            </div>\n            <div className='fl-right'>\n                {\n                  userData.isAuth ? \n                  <>\n                    <em className='welcome-message'>Welcome, {userData.user.username}</em>\n                    {/* <Link className='link' to='/account'><FontAwesomeIcon icon={faUser}/>Account</Link> */}\n                    {\n                      userData.user.isStaff ?\n                      <>\n                        <Link className='link' to='/admin'><FontAwesomeIcon icon={faUserCog}/>Admin</Link>\n                      </>\n                      :\n                      null\n                    }\n                    <button className='link' onClick={() => logout()}>Logout</button>\n                  </>\n                  :\n                  <>\n                    <Link className='link' to='/register'>Register</Link>\n                    <Link className='link' to='/login'>Login</Link>\n                  </>\n                }\n            </div>\n            \n          </div>\n        <div className='container h-centered-margin' >\n          \n          <Route exact path=\"/\" render={() => <Home userData={userData} title={'Home'}/>} />\n          \n          <Route exact path=\"/register\" render={(compProps) => \n            userData.isAuth ? <Redirect to=\"/\" /> : <RegisterPage {...compProps} store={props.store} title={'Register'} />\n          } />\n          \n          <Route exact path=\"/login\" render={(compProps) => \n            userData.isAuth ? <Redirect to=\"/\"/> : <LoginPage {...compProps} store={props.store} title={'Login'}/>\n          } />\n\n          <Route exact path=\"/issues\" render={(compProps) => \n            userData.isAuth ? <IssuesPage {...compProps} store={props.store} title={'Issues'}/> : <Redirect to=\"/login\"/>\n          } />\n\n          <Route exact path=\"/admin\" render={(compProps) => \n            userData.user.isStaff ? <AdminPage {...compProps} store={props.store} title={'Admin'}/> : <Redirect to=\"/\"/>\n          } />\n\n          <Route exact path=\"/issues/report\" render={(compProps) => \n            userData.isAuth ?  <ReportIssuePage {...compProps} store={props.store} title={'Report Issue'}/> : <Redirect to=\"/login\"/>\n          } />\n\n          {/* <Route exact path=\"/account\" render={(compProps) => \n            userData.isAuth ? <h1>{userData.user.username}'s Account</h1> : <Redirect to=\"/login\"/>\n          } /> */}\n\n          \n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// redux reducer function for the user state\n\nconst initialState = {\n    isAuth : false,\n    user : {}\n}\n\nexport default ( state = initialState, action) => {\n    switch(action.type) {\n        case 'SET_USER': \n            return {\n                isAuth : true,\n                user : action.user\n            }\n        case 'CLEAR_USER':\n            return initialState\n        default : return state\n    }\n}","const initialState = {\n    errMessage : \"\",\n    notification : \"\"\n}\n\nexport default ( state = initialState, action) => {\n    switch(action.type) {\n        case 'SET_ERROR': \n            return {\n                ...state,\n                errMessage : action.message\n            }\n        case 'SET_NOTIFICATION':\n            return {\n                ...state,\n                notification : action.message\n            }\n        case 'CLEAR_ERROR':\n            return {\n                ...state,\n                errMessage : \"\"\n            }\n        case 'CLEAR_NOTIFICATION':\n            return {\n                ...state,\n                notification : \"\"\n            }\n        case 'CLEAR_ALL':\n            return initialState\n        default : return state\n    }\n}","import { combineReducers } from 'redux'\n\nimport userReducer from './reducers/userReducer'\nimport messageReducer from './reducers/messageReducer'\n\nexport default combineReducers({\n    userReducer,\n    messageReducer\n})","/* standard imports */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux'\nimport jwt from 'jsonwebtoken'\n\nimport App from './App';\nimport './index.css'\n\nimport * as serviceWorker from './serviceWorker';\n\n/* custom imports */\nimport rootReducer from './utils/rootReducer'\nimport { setUser } from './actions/userActions'\n\n// create redux store for the combined project reducers & \n//make accessible to redux dev tool\nconst store = createStore (\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n// check for local data storage token -- maybe moev to another file?\nif(localStorage.token) {\n    // const token_data = jwt.decode(localStorage.token)\n    try {\n        const token_data = jwt.verify(localStorage.token, 'somekey')\n        if((token_data.exp * 1000) <= Date.now()) {\n            // token has expired -- requires refresh token\n            console.log('token has expired! please login')\n            localStorage.removeItem('token')\n        } else store.dispatch(setUser(token_data))\n    } catch(err) {\n        // token has changed\n        console.log('token has been changed!')\n        localStorage.removeItem('token')\n    }\n}\n\nconst renderApp = () => {\n    ReactDOM.render(\n        <App store={store}/>,\n        document.getElementById('root'));\n}\nrenderApp()\nstore.subscribe(renderApp)\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// validate package --- written by Joe Mitchell\n'use strict';\n\nvar validateNumber = function validateNumber(num) {\n  if (isNaN(num)) throw new Error('value is not a number');\n};\n\nvar validateDate = function validateDate(date) {\n  if (isNaN(date)) throw new Error('invalid date type');\n};\n\nvar checkMissingData = function checkMissingData(data, requiredKeys) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = requiredKeys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var key = _step.value;\n      if (!(key in data)) throw new Error(\"\".concat(key, \" missing\"));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\nvar checkCorrectDataTypes = function checkCorrectDataTypes(data, example) {\n  for (var _i = 0, _Object$keys = Object.keys(data); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (typeof data[key] !== typeof example[key]) throw new Error(\"\".concat(key, \" has invalid data type\"));\n  }\n};\n\nvar validateTimestamp = function validateTimestamp(timestamp) {\n  validateNumber(timestamp); // check for -ve timestamp\n\n  if (timestamp < 0) throw new Error('timestamp cannot be negative'); // check for too advanced timestamp\n  // eslint-disable-next-line no-magic-numbers\n\n  var daySeconds = 60 * 60 * 24,\n      advancedTimeStamp = Date.now() + daySeconds;\n  if (timestamp > advancedTimeStamp) throw new Error('timestamp is too far in the future');\n};\n\nvar checkUndefinedParams = function checkUndefinedParams(params) {\n  for (var _i2 = 0, _Object$keys2 = Object.keys(params); _i2 < _Object$keys2.length; _i2++) {\n    var key = _Object$keys2[_i2];\n    if (params[key] === undefined || params[key] === null || params[key] === '') throw new Error(\"\".concat(key, \" must not be blank\"));\n  }\n};\n\nmodule.exports = {\n  validateDate: validateDate,\n  checkMissingData: checkMissingData,\n  checkCorrectDataTypes: checkCorrectDataTypes,\n  checkUndefinedParams: checkUndefinedParams,\n  validateTimestamp: validateTimestamp,\n  validateNumber: validateNumber\n};"],"sourceRoot":""}